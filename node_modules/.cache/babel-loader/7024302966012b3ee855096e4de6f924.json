{"ast":null,"code":"import React from\"react\";import{reduxForm}from\"redux-form\";import{createField,Input}from\"../common/FormsControls/FormsControls\";import{required}from\"../../utils/validators/validators\";import{connect}from\"react-redux\";import{login}from\"../../redux/authReducer\";import{Redirect}from\"react-router-dom\";import style from'./../common/FormsControls/FormsControls.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginForm=function LoginForm(_ref){var handleSubmit=_ref.handleSubmit,error=_ref.error;return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[createField('email','email',[required],Input),createField('Password','password',[required],Input,{type:'password'}),createField(null,'rememberMe',[],Input,{type:'checkbox'},'remember me'),error&&/*#__PURE__*/_jsx(\"div\",{className:style.formSummaryError,children:error}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{children:\"Login\"})})]});};var LoginReduxForm=reduxForm({form:'login'})(LoginForm);var Login=function Login(props){var onSubmit=function onSubmit(formData){props.login(formData.email,formData.password,formData.rememberMe);};if(props.isAuth){return/*#__PURE__*/_jsx(Redirect,{to:'/profile'});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Login\"}),/*#__PURE__*/_jsx(LoginReduxForm,{onSubmit:onSubmit})]});};var mapStateToProps=function mapStateToProps(state){return{isAuth:state.auth.isAuth};};export default connect(mapStateToProps,{login:login})(Login);","map":{"version":3,"sources":["/Users/admin/Documents/Code/testProjectSocial/socialNetwork/src/components/Login/Login.jsx"],"names":["React","reduxForm","createField","Input","required","connect","login","Redirect","style","LoginForm","handleSubmit","error","type","formSummaryError","LoginReduxForm","form","Login","props","onSubmit","formData","email","password","rememberMe","isAuth","mapStateToProps","state","auth"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,SAAR,KAAwB,YAAxB,CACA,OAAQC,WAAR,CAAqBC,KAArB,KAAiC,uCAAjC,CACA,OAAQC,QAAR,KAAuB,mCAAvB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,KAAR,KAAoB,yBAApB,CACA,OAAQC,QAAR,KAAuB,kBAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oDAAlB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA2B,IAAzBC,CAAAA,YAAyB,MAAzBA,YAAyB,CAAXC,KAAW,MAAXA,KAAW,CACzC,mBACI,cAAM,QAAQ,CAAED,YAAhB,WACKR,WAAW,CAAC,OAAD,CAAU,OAAV,CAAmB,CAACE,QAAD,CAAnB,CAA+BD,KAA/B,CADhB,CAEKD,WAAW,CAAC,UAAD,CAAa,UAAb,CAAyB,CAACE,QAAD,CAAzB,CAAqCD,KAArC,CAA4C,CAACS,IAAI,CAAE,UAAP,CAA5C,CAFhB,CAGKV,WAAW,CAAC,IAAD,CAAO,YAAP,CAAqB,EAArB,CAAyBC,KAAzB,CAAgC,CAACS,IAAI,CAAE,UAAP,CAAhC,CAAoD,aAApD,CAHhB,CAIKD,KAAK,eAAI,YAAK,SAAS,CAAEH,KAAK,CAACK,gBAAtB,UACLF,KADK,EAJd,cAQI,kCACI,iCADJ,EARJ,GADJ,CAcH,CAfD,CAiBA,GAAMG,CAAAA,cAAc,CAAGb,SAAS,CAAC,CAC7Bc,IAAI,CAAE,OADuB,CAAD,CAAT,CAEpBN,SAFoB,CAAvB,CAIA,GAAMO,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACrB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAc,CAC3BF,KAAK,CAACX,KAAN,CAAYa,QAAQ,CAACC,KAArB,CAA4BD,QAAQ,CAACE,QAArC,CAA+CF,QAAQ,CAACG,UAAxD,EACH,CAFD,CAIA,GAAIL,KAAK,CAACM,MAAV,CAAkB,CACd,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,UAAd,EAAP,CACH,CAED,mBAAO,oCACH,6BADG,cAEH,KAAC,cAAD,EAAgB,QAAQ,CAAEL,QAA1B,EAFG,GAAP,CAIH,CAbD,CAeA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAChCF,MAAM,CAAEE,KAAK,CAACC,IAAN,CAAWH,MADa,CAAZ,EAAxB,CAIA,cAAelB,CAAAA,OAAO,CAACmB,eAAD,CAAkB,CAAClB,KAAK,CAALA,KAAD,CAAlB,CAAP,CAAkCU,KAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport {reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/authReducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from './../common/FormsControls/FormsControls.module.css'\n\nconst LoginForm = ({handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField('email', 'email', [required], Input)}\n            {createField('Password', 'password', [required], Input, {type: 'password'})}\n            {createField(null, 'rememberMe', [], Input, {type: 'checkbox'}, 'remember me')}\n            {error && <div className={style.formSummaryError}>\n                {error}\n            </div>\n            }\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({\n    form: 'login'\n})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'}/>\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit}/>\n    </div>\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login})(Login)"]},"metadata":{},"sourceType":"module"}