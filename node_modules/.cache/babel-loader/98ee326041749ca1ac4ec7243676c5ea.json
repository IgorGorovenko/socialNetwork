{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Code/testProjectSocial/socialNetwork/src/components/Users/UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, setCurrentPage, setTotalUsersCount, setUsers, toggleIsFetching, unfollow } from \"../../redux/usersReducer\";\nimport * as axios from 'axios';\nimport Users from './Users';\nimport Preloader from \"../common/preloader/Preloader\";\nimport { getUsers } from \"../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`, {\n        withCredentials: true\n      }).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    getUsers().then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 38\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching\n})(UsersContainer);","map":{"version":3,"sources":["/Users/admin/Documents/Code/testProjectSocial/socialNetwork/src/components/Users/UsersContainer.jsx"],"names":["React","connect","follow","setCurrentPage","setTotalUsersCount","setUsers","toggleIsFetching","unfollow","axios","Users","Preloader","getUsers","UsersContainer","Component","onPageChanged","pageNumber","props","get","pageSize","withCredentials","then","response","data","items","componentDidMount","totalCount","render","isFetching","totalUsersCount","currentPage","users","mapStateToProps","state","usersPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,MADJ,EAEIC,cAFJ,EAGIC,kBAHJ,EAIIC,QAJJ,EAKIC,gBALJ,EAMIC,QANJ,QAOO,0BAPP;AAQA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAAQC,QAAR,QAAuB,eAAvB;;;;AAEA,MAAMC,cAAN,SAA6BZ,KAAK,CAACa,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAYzCC,aAZyC,GAYxBC,UAAD,IAAgB;AAC5B,WAAKC,KAAL,CAAWb,cAAX,CAA0BY,UAA1B;AACA,WAAKC,KAAL,CAAWV,gBAAX,CAA4B,IAA5B;AACAE,MAAAA,KAAK,CAACS,GAAN,CAAW,2DAA0DF,UAAW,UAAS,KAAKC,KAAL,CAAWE,QAAS,EAA7G,EACI;AACIC,QAAAA,eAAe,EAAE;AADrB,OADJ,EAIKC,IAJL,CAIUC,QAAQ,IAAI;AACd,aAAKL,KAAL,CAAWV,gBAAX,CAA4B,KAA5B;AACA,aAAKU,KAAL,CAAWX,QAAX,CAAoBgB,QAAQ,CAACC,IAAT,CAAcC,KAAlC;AACH,OAPL;AAQH,KAvBwC;AAAA;;AAEzCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,KAAL,CAAWV,gBAAX,CAA4B,IAA5B;AAEAK,IAAAA,QAAQ,GAAGS,IAAX,CAAgBC,QAAQ,IAAI;AACpB,WAAKL,KAAL,CAAWV,gBAAX,CAA4B,KAA5B;AACA,WAAKU,KAAL,CAAWX,QAAX,CAAoBgB,QAAQ,CAACC,IAAT,CAAcC,KAAlC;AACA,WAAKP,KAAL,CAAWZ,kBAAX,CAA8BiB,QAAQ,CAACC,IAAT,CAAcG,UAA5C;AACH,KAJL;AAKH;;AAeDC,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,iBACF,KAAKV,KAAL,CAAWW,UAAX,gBAAwB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAxB,GAAuC,IADrC,eAEH,QAAC,KAAD;AAAO,QAAA,eAAe,EAAE,KAAKX,KAAL,CAAWY,eAAnC;AACO,QAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWE,QAD5B;AAEO,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAWa,WAF/B;AAGO,QAAA,aAAa,EAAE,KAAKf,aAH3B;AAIO,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWc,KAJzB;AAKO,QAAA,MAAM,EAAE,KAAKd,KAAL,CAAWd,MAL1B;AAMO,QAAA,QAAQ,EAAE,KAAKc,KAAL,CAAWT;AAN5B;AAAA;AAAA;AAAA;AAAA,cAFG;AAAA,oBAAP;AAWH;;AArCwC;;AAwC7C,IAAIwB,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHF,IAAAA,KAAK,EAAEE,KAAK,CAACC,SAAN,CAAgBH,KADpB;AAEHZ,IAAAA,QAAQ,EAAEc,KAAK,CAACC,SAAN,CAAgBf,QAFvB;AAGHU,IAAAA,eAAe,EAAEI,KAAK,CAACC,SAAN,CAAgBL,eAH9B;AAIHC,IAAAA,WAAW,EAAEG,KAAK,CAACC,SAAN,CAAgBJ,WAJ1B;AAKHF,IAAAA,UAAU,EAAEK,KAAK,CAACC,SAAN,CAAgBN;AALzB,GAAP;AAOH,CARD;;AAUA,eAAe1B,OAAO,CAAC8B,eAAD,EAClB;AAAC7B,EAAAA,MAAD;AAASK,EAAAA,QAAT;AAAmBF,EAAAA,QAAnB;AAA6BF,EAAAA,cAA7B;AAA6CC,EAAAA,kBAA7C;AAAiEE,EAAAA;AAAjE,CADkB,CAAP,CACyEM,cADzE,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux';\nimport {\n    follow,\n    setCurrentPage,\n    setTotalUsersCount,\n    setUsers,\n    toggleIsFetching,\n    unfollow\n} from \"../../redux/usersReducer\";\nimport * as axios from 'axios';\nimport Users from './Users';\nimport Preloader from \"../common/preloader/Preloader\";\nimport {getUsers} from \"../../api/api\";\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.toggleIsFetching(true)\n\n        getUsers().then(response => {\n                this.props.toggleIsFetching(false)\n                this.props.setUsers(response.data.items);\n                this.props.setTotalUsersCount(response.data.totalCount);\n            })\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber);\n        this.props.toggleIsFetching(true)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`,\n            {\n                withCredentials: true\n            })\n            .then(response => {\n                this.props.toggleIsFetching(false)\n                this.props.setUsers(response.data.items)\n            })\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching\n    }\n}\n\nexport default connect(mapStateToProps,\n    {follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching})(UsersContainer)"]},"metadata":{},"sourceType":"module"}