{"ast":null,"code":"const ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\nconst SEND_MESSAGE = 'SEND_MESSAGE';\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: 'Hi, how are you?',\n        likesCount: 4\n      }, {\n        id: 2,\n        message: 'It is my first post',\n        likesCount: 12\n      }, {\n        id: 1,\n        message: 'Hi, how are you?',\n        likesCount: 4\n      }, {\n        id: 2,\n        message: 'It is my first post',\n        likesCount: 12\n      }],\n      newPostText: 'Gurman'\n    },\n    dialogsPage: {\n      messages: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'How are you?'\n      }, {\n        id: 3,\n        message: 'Fine'\n      }, {\n        id: 4,\n        message: 'Ok'\n      }, {\n        id: 5,\n        message: 'Ok'\n      }],\n      dialogs: [{\n        id: 1,\n        name: 'Igor'\n      }, {\n        id: 2,\n        name: 'Gurman'\n      }, {\n        id: 3,\n        name: 'Vova'\n      }, {\n        id: 4,\n        name: 'Andrew'\n      }, {\n        id: 5,\n        name: 'Sasha'\n      }, {\n        id: 6,\n        name: 'Jeka'\n      }],\n      newMessageBody: ''\n    }\n  },\n\n  _callSubscriber() {\n    console.log('State changed');\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer; // observer\n  },\n\n  dispatch(action) {\n    // { type: 'ADD-POST' }\n    if (action.type === ADD_POST) {\n      let newPost = {\n        id: 5,\n        message: this._state.profilePage.newPostText,\n        likesCount: 0\n      };\n\n      this._state.profilePage.posts.push(newPost);\n\n      this._state.profilePage.newPostText = '';\n\n      this._callSubscriber(this._state);\n    } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\n      this._state.profilePage.newPostText = action.newText;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n      this._state.dialogsPage.newMessageBody = action.body;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === SEND_MESSAGE) {\n      let body = this._state.dialogsPage.newMessageBody;\n      this._state.dialogsPage.newMessageBody = '';\n\n      this._state.dialogsPage.messages.push();\n\n      this._callSubscriber(this._state);\n    }\n  }\n\n};\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport default store;\nwindow.store = store; // store - OOP","map":{"version":3,"sources":["/Users/admin/Documents/Code/testProjectSocial/socialNetwork/src/redux/state.js"],"names":["ADD_POST","UPDATE_NEW_POST_TEXT","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","store","_state","profilePage","posts","id","message","likesCount","newPostText","dialogsPage","messages","dialogs","name","newMessageBody","_callSubscriber","console","log","getState","subscribe","observer","dispatch","action","type","newPost","push","newText","body","addPostActionCreator","updateNewPostTextActionCreator","text","window"],"mappings":"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","sourcesContent":["const ADD_POST = 'ADD-POST'\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\n\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\nconst SEND_MESSAGE = 'SEND_MESSAGE';\n\nlet store = {\n    _state: {\n        profilePage: {\n            posts: [\n                {id: 1, message: 'Hi, how are you?', likesCount: 4},\n                {id: 2, message: 'It is my first post', likesCount: 12},\n                {id: 1, message: 'Hi, how are you?', likesCount: 4},\n                {id: 2, message: 'It is my first post', likesCount: 12},\n            ],\n            newPostText: 'Gurman'\n\n        },\n        dialogsPage: {\n            messages: [\n                {id: 1, message: 'Hi'},\n                {id: 2, message: 'How are you?'},\n                {id: 3, message: 'Fine'},\n                {id: 4, message: 'Ok'},\n                {id: 5, message: 'Ok'},\n            ],\n            dialogs: [\n                {id: 1, name: 'Igor'},\n                {id: 2, name: 'Gurman'},\n                {id: 3, name: 'Vova'},\n                {id: 4, name: 'Andrew'},\n                {id: 5, name: 'Sasha'},\n                {id: 6, name: 'Jeka'},\n            ],\n            newMessageBody: ''\n\n        }\n    },\n    _callSubscriber() {\n        console.log('State changed')\n    },\n\n    getState() {\n        return this._state;\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer; // observer\n    },\n\n    dispatch(action) { // { type: 'ADD-POST' }\n        if (action.type === ADD_POST) {\n            let newPost = {\n                id: 5,\n                message: this._state.profilePage.newPostText,\n                likesCount: 0,\n            }\n\n            this._state.profilePage.posts.push(newPost)\n            this._state.profilePage.newPostText = ''\n            this._callSubscriber(this._state)\n        } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\n            this._state.profilePage.newPostText = action.newText\n            this._callSubscriber(this._state)\n        } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n            this._state.dialogsPage.newMessageBody = action.body\n            this._callSubscriber(this._state)\n        } else if (action.type === SEND_MESSAGE) {\n            let body = this._state.dialogsPage.newMessageBody\n            this._state.dialogsPage.newMessageBody = ''\n            this._state.dialogsPage.messages.push()\n            this._callSubscriber(this._state)\n        }\n    }\n}\n\nexport const addPostActionCreator = () => ({type: ADD_POST})\n\nexport const updateNewPostTextActionCreator = (text) => ({type: UPDATE_NEW_POST_TEXT, newText: text})\n\n\nexport default store;\nwindow.store = store;\n\n// store - OOP"]},"metadata":{},"sourceType":"module"}