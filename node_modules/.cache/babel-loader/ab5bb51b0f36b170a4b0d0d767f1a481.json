{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Code/testProjectSocial/socialNetwork/src/components/Users/UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { followAC, setCurrentPageAC, setTotalUserCountAC, setUsersAC, toggleIsFetchingAC, unfollowAC } from \"../../redux/usersReducer\";\nimport * as axios from 'axios';\nimport Users from './Users';\nimport preloader from '../../assets/images/preloader.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUserCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: preloader,\n          style: {\n            backgroundColor: 'red'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUserCount: totalCount => {\n      dispatch(setTotalUserCountAC(totalCount));\n    },\n    toggleIsFetching: isFetching => {\n      dispatch(toggleIsFetchingAC(isFetching));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["/Users/admin/Documents/Code/testProjectSocial/socialNetwork/src/components/Users/UsersContainer.jsx"],"names":["React","connect","followAC","setCurrentPageAC","setTotalUserCountAC","setUsersAC","toggleIsFetchingAC","unfollowAC","axios","Users","preloader","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","toggleIsFetching","get","pageSize","then","response","setUsers","data","items","componentDidMount","currentPage","setTotalUserCount","totalCount","render","isFetching","backgroundColor","totalUsersCount","users","follow","unfollow","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux';\nimport {\n    followAC,\n    setCurrentPageAC,\n    setTotalUserCountAC,\n    setUsersAC,\n    toggleIsFetchingAC,\n    unfollowAC\n} from \"../../redux/usersReducer\";\nimport * as axios from 'axios';\nimport Users from './Users';\nimport preloader from '../../assets/images/preloader.gif';\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.toggleIsFetching(true)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.toggleIsFetching(false)\n                this.props.setUsers(response.data.items);\n                this.props.setTotalUserCount(response.data.totalCount);\n            })\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber);\n        this.props.toggleIsFetching(true)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.toggleIsFetching(false)\n                this.props.setUsers(response.data.items)\n            })\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ?\n                <div>\n                    <img src={preloader} style={{backgroundColor: 'red'}}/>\n                </div> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        follow: (userId) => {\n            dispatch(followAC(userId))\n        },\n        unfollow: (userId) => {\n            dispatch(unfollowAC(userId))\n        },\n        setUsers: (users) => {\n            dispatch(setUsersAC(users))\n        },\n        setCurrentPage: (pageNumber) => {\n            dispatch(setCurrentPageAC(pageNumber))\n        },\n        setTotalUserCount: (totalCount) => {\n            dispatch(setTotalUserCountAC(totalCount))\n        },\n        toggleIsFetching: (isFetching) => {\n            dispatch(toggleIsFetchingAC(isFetching))\n        },\n\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer)"]},"metadata":{},"sourceType":"module"}