{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nlet initialState = {\n  users: [{\n    id: 1,\n    photoUrl: '',\n    followed: false,\n    fullName: 'Dmitry',\n    status: 'I am a Gurman',\n    location: {\n      city: 'Minsk',\n      country: 'Belarus'\n    }\n  }, {\n    id: 2,\n    followed: true,\n    fullName: 'Sasha',\n    status: 'I am a Gurman',\n    location: {\n      city: 'Moskov',\n      country: 'Russia'\n    }\n  }, {\n    id: 3,\n    followed: false,\n    fullName: 'Andrew',\n    status: 'I am a Gurman',\n    location: {\n      city: 'Kiev',\n      country: 'Ukraine'\n    }\n  }]\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: [...state.users, ...action.users]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowAC = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport default usersReducer;","map":{"version":3,"sources":["/Users/admin/Documents/Code/testProjectSocial/socialNetwork/src/redux/usersReducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","initialState","users","id","photoUrl","followed","fullName","status","location","city","country","usersReducer","state","action","type","map","u","userId","followAC","unfollowAC","setUsersAC"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,CACH;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,QAAQ,EAAE,EAFd;AAGIC,IAAAA,QAAQ,EAAE,KAHd;AAIIC,IAAAA,QAAQ,EAAE,QAJd;AAKIC,IAAAA,MAAM,EAAE,eALZ;AAMIC,IAAAA,QAAQ,EAAE;AAACC,MAAAA,IAAI,EAAE,OAAP;AAAgBC,MAAAA,OAAO,EAAE;AAAzB;AANd,GADG,EASH;AACIP,IAAAA,EAAE,EAAE,CADR;AAEIE,IAAAA,QAAQ,EAAE,IAFd;AAGIC,IAAAA,QAAQ,EAAE,OAHd;AAIIC,IAAAA,MAAM,EAAE,eAJZ;AAKIC,IAAAA,QAAQ,EAAE;AAACC,MAAAA,IAAI,EAAE,QAAP;AAAiBC,MAAAA,OAAO,EAAE;AAA1B;AALd,GATG,EAgBH;AACIP,IAAAA,EAAE,EAAE,CADR;AAEIE,IAAAA,QAAQ,EAAE,KAFd;AAGIC,IAAAA,QAAQ,EAAE,QAHd;AAIIC,IAAAA,MAAM,EAAE,eAJZ;AAKIC,IAAAA,QAAQ,EAAE;AAACC,MAAAA,IAAI,EAAE,MAAP;AAAeC,MAAAA,OAAO,EAAE;AAAxB;AALd,GAhBG;AADQ,CAAnB;;AA2BA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AAEnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKhB,MAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHV,QAAAA,KAAK,EAAEU,KAAK,CAACV,KAAN,CAAYa,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACb,EAAF,KAASU,MAAM,CAACI,MAApB,EAA4B;AACxB,mBAAO,EAAC,GAAGD,CAAJ;AAAOX,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACD,iBAAOW,CAAP;AACH,SALM;AAFJ,OAAP;;AAUJ,SAAKjB,QAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHV,QAAAA,KAAK,EAAEU,KAAK,CAACV,KAAN,CAAYa,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACb,EAAF,KAASU,MAAM,CAACI,MAApB,EAA4B;AACxB,mBAAO,EAAC,GAAGD,CAAJ;AAAOX,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACD,iBAAOW,CAAP;AACH,SALM;AAFJ,OAAP;;AAUJ,SAAKhB,SAAL;AAAgB;AACZ,eAAO,EAAC,GAAGY,KAAJ;AAAWV,UAAAA,KAAK,EAAE,CAAC,GAAGU,KAAK,CAACV,KAAV,EAAiB,GAAGW,MAAM,CAACX,KAA3B;AAAlB,SAAP;AACH;;AAED;AACI,aAAOU,KAAP;AA5BR;AA8BH,CAhCD;;AAkCA,OAAO,MAAMM,QAAQ,GAAID,MAAD,KAAa;AAACH,EAAAA,IAAI,EAAEhB,MAAP;AAAemB,EAAAA;AAAf,CAAb,CAAjB;AACP,OAAO,MAAME,UAAU,GAAIF,MAAD,KAAa;AAACH,EAAAA,IAAI,EAAEf,QAAP;AAAiBkB,EAAAA;AAAjB,CAAb,CAAnB;AACP,OAAO,MAAMG,UAAU,GAAIlB,KAAD,KAAY;AAACY,EAAAA,IAAI,EAAEd,SAAP;AAAkBE,EAAAA;AAAlB,CAAZ,CAAnB;AAGP,eAAeS,YAAf","sourcesContent":["const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\n\nlet initialState = {\n    users: [\n        {\n            id: 1,\n            photoUrl: '',\n            followed: false,\n            fullName: 'Dmitry',\n            status: 'I am a Gurman',\n            location: {city: 'Minsk', country: 'Belarus'}\n        },\n        {\n            id: 2,\n            followed: true,\n            fullName: 'Sasha',\n            status: 'I am a Gurman',\n            location: {city: 'Moskov', country: 'Russia'}\n        },\n        {\n            id: 3,\n            followed: false,\n            fullName: 'Andrew',\n            status: 'I am a Gurman',\n            location: {city: 'Kiev', country: 'Ukraine'}\n        },\n    ]\n}\n\nconst usersReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true}\n                    }\n                    return u\n                })\n            }\n\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false}\n                    }\n                    return u\n                })\n            }\n\n        case SET_USERS: {\n            return {...state, users: [...state.users, ...action.users]}\n        }\n\n        default:\n            return state\n    }\n}\n\nexport const followAC = (userId) => ({type: FOLLOW, userId})\nexport const unfollowAC = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsersAC = (users) => ({type: SET_USERS, users})\n\n\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}