{"ast":null,"code":"import React from 'react';\nimport { sendMessageCreator, updateNewMessageBodyCreator } from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    sendMessage: () => {\n      dispatch(sendMessageCreator());\n    },\n    updateNewMessageBody: body => {\n      dispatch(updateNewMessageBodyCreator(body));\n    }\n  };\n};\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;","map":{"version":3,"sources":["/Users/admin/Documents/Code/testProjectSocial/socialNetwork/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","sendMessageCreator","updateNewMessageBodyCreator","Dialogs","connect","mapStateToProps","state","dialogsPage","isAuth","auth","mapDispatchToProps","dispatch","sendMessage","updateNewMessageBody","body","DialogsContainer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,kBAAR,EAA4BC,2BAA5B,QAA8D,4BAA9D;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADhB;AAEHC,IAAAA,MAAM,EAAEF,KAAK,CAACG,IAAN,CAAWD;AAFhB,GAAP;AAIH,CALD;;AAMA,IAAIE,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHC,IAAAA,WAAW,EAAE,MAAM;AACfD,MAAAA,QAAQ,CAACV,kBAAkB,EAAnB,CAAR;AACH,KAHE;AAIHY,IAAAA,oBAAoB,EAAGC,IAAD,IAAU;AAC5BH,MAAAA,QAAQ,CAACT,2BAA2B,CAACY,IAAD,CAA5B,CAAR;AACH;AANE,GAAP;AAQH,CATD;;AAWA,MAAMC,gBAAgB,GAAGX,OAAO,CAACC,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CP,OAA7C,CAAzB;AAEA,eAAeY,gBAAf","sourcesContent":["import React from 'react';\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n        isAuth: state.auth.isAuth\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: () => {\n            dispatch(sendMessageCreator())\n        },\n        updateNewMessageBody: (body) => {\n            dispatch(updateNewMessageBodyCreator(body))\n        }\n    }\n}\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\n\nexport default DialogsContainer"]},"metadata":{},"sourceType":"module"}