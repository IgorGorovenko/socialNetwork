{"ast":null,"code":"import * as axios from \"axios\";\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\n    \"API-KEY\": \"263df062-c1ff-4450-bbbe-870baa90759c\"\n  }\n});\nexport const usersAPI = {\n  getUsers(currentPage = 1, pageSize = 10) {\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\n      return response.data;\n    });\n  },\n\n  follow(userId) {\n    return instance.post(`follow/${userId}`);\n  },\n\n  unfollow(userId) {\n    return instance.delete(`follow/${userId}`);\n  },\n\n  getProfile(userId) {\n    console.log('Obsolete method. Please profileAPI object');\n    return profileAPI.getProfile(userId);\n  }\n\n};\nexport const profileAPI = {\n  getProfile(userId) {\n    return instance.get(`profile/` + userId);\n  },\n\n  getStatus(userId) {\n    return instance.get(`profile/status/` + userId);\n  },\n\n  updateStatus(status) {\n    return instance.put(`profile/status`, {\n      status: status\n    });\n  },\n\n  savePhoto(photoFile) {\n    const formData = new FormData();\n    formData.append('image', photoFile);\n    return instance.put(`profile/photo`, formData, {\n      headers: {\n        'Content-Type': 'multipart/from-data'\n      }\n    });\n  },\n\n  saveProfile(profile) {\n    return instance.put(`profile`, profile);\n  }\n\n};\nexport const authAPI = {\n  me() {\n    return instance.get(`auth/me`);\n  },\n\n  login(email, password, rememberMe = false, captcha = null) {\n    return instance.post(`auth/login`, {\n      email,\n      password,\n      rememberMe,\n      captcha\n    });\n  },\n\n  logout() {\n    return instance.delete(`auth/login`);\n  }\n\n};\nexport const securityAPI = {\n  getCaptchaUrl() {\n    return instance.get(`security/get-captcha-url`);\n  }\n\n};","map":{"version":3,"sources":["/Users/admin/Documents/Code/testProjectSocial/socialNetwork/src/api/api.js"],"names":["axios","instance","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","log","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl"],"mappings":"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","sourcesContent":["import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        \"API-KEY\": \"263df062-c1ff-4450-bbbe-870baa90759c\"\n    }\n\n})\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data\n            })\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId) {\n        console.log('Obsolete method. Please profileAPI object')\n        return profileAPI.getProfile(userId)\n\n    }\n}\n\nexport const profileAPI = {\n\n    getProfile(userId) {\n        return instance.get(`profile/` + userId)\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId)\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, {status: status})\n    },\n\n    savePhoto(photoFile) {\n        const formData = new FormData()\n        formData.append('image', photoFile)\n        return instance.put(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/from-data'\n            }\n        })\n    },\n\n    saveProfile(profile) {\n        return instance.put(`profile`, profile)\n    }\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`)\n    },\n\n    login(email, password, rememberMe = false, captcha = null) {\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\n    },\n\n    logout() {\n        return instance.delete(`auth/login`)\n    },\n}\n\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`)\n    }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}