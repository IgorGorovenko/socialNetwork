{"ast":null,"code":"import { profileAPI, usersAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 4\n  }, {\n    id: 2,\n    message: 'It is my first post',\n    likesCount: 12\n  }, {\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 4\n  }, {\n    id: 2,\n    message: 'It is my first post',\n    likesCount: 12\n  }],\n  profile: null,\n  status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 5,\n          message: action.newPostText,\n          likesCount: 0\n        };\n        return { ...state,\n          posts: [...state.posts, newPost],\n          newPostText: ''\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(p => p.id !== action.postId)\n      };\n\n    case SAVE_PHOTO_SUCCESS:\n      return { ...state,\n        profile: { ...state.profile,\n          photos: action.photo\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const deletePost = postId => ({\n  type: DELETE_POST,\n  postId\n});\nexport const savePhotoSuccess = photos => ({\n  type: SAVE_PHOTO_SUCCESS,\n  photos\n});\nexport const getUserProfile = userId => async dispatch => {\n  const response = await usersAPI.getProfile(userId);\n  dispatch(setUserProfile(response.data));\n};\nexport const getStatus = userId => async dispatch => {\n  const response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  const response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport const savePhoto = file => async dispatch => {\n  const response = await profileAPI.savePhoto(file);\n\n  if (response.data.resultCode === 0) {\n    dispatch(savePhotoSuccess(response.data.data.photos));\n  }\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/admin/Documents/Code/testProjectSocial/socialNetwork/src/redux/profileReducer.js"],"names":["profileAPI","usersAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","initialState","posts","id","message","likesCount","profile","status","profileReducer","state","action","type","newPost","newPostText","filter","p","postId","photos","photo","addPostActionCreator","setUserProfile","setStatus","deletePost","savePhotoSuccess","getUserProfile","userId","dispatch","response","getProfile","data","getStatus","updateStatus","resultCode","savePhoto","file"],"mappings":"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","sourcesContent":["import {profileAPI, usersAPI} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST'\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\n\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hi, how are you?', likesCount: 4},\n        {id: 2, message: 'It is my first post', likesCount: 12},\n        {id: 1, message: 'Hi, how are you?', likesCount: 4},\n        {id: 2, message: 'It is my first post', likesCount: 12},\n    ],\n    profile: null,\n    status: ''\n\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: action.newPostText,\n                likesCount: 0,\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: ''\n            }\n        }\n\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n        case DELETE_POST:\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\n\n        case SAVE_PHOTO_SUCCESS:\n            return {...state, profile: {...state.profile, photos: action.photo}}\n\n        default:\n            return state\n\n    }\n}\n\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\nexport const setStatus = (status) => ({type: SET_STATUS, status})\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\n\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    const response = await usersAPI.getProfile(userId)\n\n    dispatch(setUserProfile(response.data))\n\n}\n\nexport const getStatus = (userId) => async (dispatch) => {\n    const response = await profileAPI.getStatus(userId)\n\n    dispatch(setStatus(response.data))\n\n}\n\nexport const updateStatus = (status) => async (dispatch) => {\n    const response = await profileAPI.updateStatus(status)\n\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status))\n    }\n\n}\n\nexport const savePhoto = (file) => async (dispatch) => {\n    const response = await profileAPI.savePhoto(file)\n\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos))\n    }\n\n}\n\n\nexport default profileReducer"]},"metadata":{},"sourceType":"module"}