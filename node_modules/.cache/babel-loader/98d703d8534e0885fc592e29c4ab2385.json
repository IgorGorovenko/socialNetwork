{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Code/testProjectSocial/socialNetwork/src/components/Profile/ProfileContainer.jsx\";\nimport React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { getStatus, getUserProfile, updateStatus } from \"../../redux/profileReducer\";\nimport { withRouter } from \"react-router\";\nimport { compose } from \"redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n\n      if (!userId) {\n        this.props.history.push('/login');\n      }\n    }\n\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userId != prevProps.match.params.userId) this.refreshProfile();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n      isOwner: !this.props.match.params.userId,\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus,\n      savePhoto: this.props.savePhotot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getStatus,\n  updateStatus\n}), withRouter)(ProfileContainer);","map":{"version":3,"sources":["/Users/admin/Documents/Code/testProjectSocial/socialNetwork/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","connect","getStatus","getUserProfile","updateStatus","withRouter","compose","ProfileContainer","Component","refreshProfile","userId","props","match","params","authorizedUserId","history","push","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","profile","status","savePhotot","mapStateToProps","state","profilePage","auth","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAmBC,cAAnB,EAAmCC,YAAnC,QAAsD,4BAAtD;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,OAAR,QAAsB,OAAtB;;;AAEA,MAAMC,gBAAN,SAA+BR,KAAK,CAACS,SAArC,CAA+C;AAE3CC,EAAAA,cAAc,GAAG;AACb,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,gBAApB;;AACA,UAAI,CAACJ,MAAL,EAAa;AACT,aAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH;AACJ;;AACD,SAAKL,KAAL,CAAWR,cAAX,CAA0BO,MAA1B;AACA,SAAKC,KAAL,CAAWT,SAAX,CAAqBQ,MAArB;AACH;;AAEDO,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,cAAL;AACH;;AAEDS,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,QAAI,KAAKV,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAxB,IAAkCS,SAAS,CAACP,KAAV,CAAgBC,MAAhB,CAAuBH,MAA7D,EACI,KAAKD,cAAL;AACP;;AAEDa,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,OAAD,OAAa,KAAKX,KAAlB;AACS,MAAA,OAAO,EAAE,CAAC,KAAKA,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAD3C;AAES,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWY,OAF7B;AAGS,MAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWa,MAH5B;AAIS,MAAA,YAAY,EAAE,KAAKb,KAAL,CAAWP,YAJlC;AAKS,MAAA,SAAS,EAAE,KAAKO,KAAL,CAAWc;AAL/B;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAjC0C;;AAoC/C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAQ;AACJJ,IAAAA,OAAO,EAAEI,KAAK,CAACC,WAAN,CAAkBL,OADvB;AAEJC,IAAAA,MAAM,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,MAFtB;AAGJV,IAAAA,gBAAgB,EAAEa,KAAK,CAACE,IAAN,CAAWnB,MAHzB;AAIJoB,IAAAA,MAAM,EAAEH,KAAK,CAACE,IAAN,CAAWC;AAJf,GAAR;AAMH,CAPD;;AAQA,eAAexB,OAAO,CAClBL,OAAO,CAACyB,eAAD,EAAkB;AAACvB,EAAAA,cAAD;AAAiBD,EAAAA,SAAjB;AAA4BE,EAAAA;AAA5B,CAAlB,CADW,EAElBC,UAFkB,CAAP,CAGbE,gBAHa,CAAf","sourcesContent":["import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profileReducer\";\nimport {withRouter} from \"react-router\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.authorizedUserId\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getUserProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId != prevProps.match.params.userId)\n            this.refreshProfile()\n    }\n\n    render() {\n        return (\n            <Profile {...this.props}\n                     isOwner={!this.props.match.params.userId}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n                     savePhoto={this.props.savePhotot}\n            />\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    })\n}\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter\n)(ProfileContainer)\n\n"]},"metadata":{},"sourceType":"module"}