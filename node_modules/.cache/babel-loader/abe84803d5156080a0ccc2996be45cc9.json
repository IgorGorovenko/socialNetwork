{"ast":null,"code":"let store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: 'Hi, how are you?',\n        likesCount: 4\n      }, {\n        id: 2,\n        message: 'It is my first post',\n        likesCount: 12\n      }, {\n        id: 1,\n        message: 'Hi, how are you?',\n        likesCount: 4\n      }, {\n        id: 2,\n        message: 'It is my first post',\n        likesCount: 12\n      }],\n      newPostText: 'Gurman'\n    },\n    dialogsPage: {\n      messages: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'How are you?'\n      }, {\n        id: 3,\n        message: 'Fine'\n      }, {\n        id: 4,\n        message: 'Ok'\n      }, {\n        id: 5,\n        message: 'Ok'\n      }],\n      dialogs: [{\n        id: 1,\n        name: 'Igor'\n      }, {\n        id: 2,\n        name: 'Gurman'\n      }, {\n        id: 3,\n        name: 'Vova'\n      }, {\n        id: 4,\n        name: 'Andrew'\n      }, {\n        id: 5,\n        name: 'Sasha'\n      }, {\n        id: 6,\n        name: 'Jeka'\n      }]\n    }\n  },\n\n  getState() {},\n\n  rerenderEntireTree() {\n    console.log('State changed');\n  },\n\n  addPost() {\n    let newPost = {\n      id: 5,\n      message: state.profilePage.newPostText,\n      likesCount: 0\n    };\n    state.profilePage.posts.push(newPost);\n    state.profilePage.newPostText = '';\n    rerenderEntireTree(state);\n  },\n\n  updateNewPostText(newText) {\n    state.profilePage.newPostText = newText;\n    rerenderEntireTree(state);\n  },\n\n  subscribe(observer) {\n    rerenderEntireTree = observer; // observer\n  }\n\n};\nexport default store;\nwindow.store = store; // store - OOP","map":{"version":3,"sources":["/Users/admin/Documents/Code/testProjectSocial/socialNetwork/src/redux/state.js"],"names":["store","_state","profilePage","posts","id","message","likesCount","newPostText","dialogsPage","messages","dialogs","name","getState","rerenderEntireTree","console","log","addPost","newPost","state","push","updateNewPostText","newText","subscribe","observer","window"],"mappings":"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","sourcesContent":["let store = {\n    _state: {\n        profilePage: {\n            posts: [\n                {id: 1, message: 'Hi, how are you?', likesCount: 4},\n                {id: 2, message: 'It is my first post', likesCount: 12},\n                {id: 1, message: 'Hi, how are you?', likesCount: 4},\n                {id: 2, message: 'It is my first post', likesCount: 12},\n            ],\n            newPostText: 'Gurman'\n\n        },\n        dialogsPage: {\n            messages: [\n                {id: 1, message: 'Hi'},\n                {id: 2, message: 'How are you?'},\n                {id: 3, message: 'Fine'},\n                {id: 4, message: 'Ok'},\n                {id: 5, message: 'Ok'},\n            ],\n            dialogs: [\n                {id: 1, name: 'Igor'},\n                {id: 2, name: 'Gurman'},\n                {id: 3, name: 'Vova'},\n                {id: 4, name: 'Andrew'},\n                {id: 5, name: 'Sasha'},\n                {id: 6, name: 'Jeka'},\n            ]\n        }\n    },\n    getState() {\n        \n    },\n    rerenderEntireTree() {\n        console.log('State changed')\n    },\n    addPost() {\n        let newPost = {\n            id: 5,\n            message: state.profilePage.newPostText,\n            likesCount: 0,\n        }\n\n        state.profilePage.posts.push(newPost)\n        state.profilePage.newPostText = '';\n        rerenderEntireTree(state)\n    },\n    updateNewPostText(newText) {\n        state.profilePage.newPostText = newText;\n        rerenderEntireTree(state)\n    },\n    subscribe(observer) {\n        rerenderEntireTree = observer; // observer\n    }\n}\n\nexport default store;\nwindow.store = store;\n\n// store - OOP"]},"metadata":{},"sourceType":"module"}